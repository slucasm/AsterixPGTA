<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox_close.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>